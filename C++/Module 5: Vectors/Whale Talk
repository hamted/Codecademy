/*
Takes a phrase like "turpentine and turtles" and translate it into its “whale talk” equivalent, "uueeieeauuee".

There are a few simple rules for translating text to whale language:

There are no consonants. Only vowels excluding the letter y.
The u‘s and e‘s are extra long, so we must double them.
Once we have converted text to the whale language, the result is sung slowly, as is custom in the ocean.

Write a whale.cpp program that accomplishes this translation using loops and vectors.
*/

#include <iostream>
#include <vector>
#include <string>
int main(){
  //Whale, whale, whale.
  //What have we got here?


  //input string
  //I changed input phrase to take input instead

  std::string phrase;
  
  std::cout << "Enter a phrase you want translated to whale talk " << "\n";
  //std::cin >> phrase;
  //^This doesn't work because it only reads up to the first space
  std::getline(std::cin, phrase);
  std::vector<char> vowels = {'a', 'e', 'i', 'o', 'u'};
  std::vector<char> result;

  for(int i = 0; i < phrase.size(); i++){ // Loop through each character in the phrase
    for(int j = 0; j < vowels.size(); j++){
      if (phrase[i] == vowels[j]){ // Check if character is a vowel and add to result
        result.push_back(phrase[i]);
      }
    }
    if(phrase[i] == 'e' || phrase[i] == 'u'){// Double 'e' and 'u' vowels
      result.push_back(phrase[i]);

    }
  }
 for(int k = 0; k < result.size(); k++){
  std::cout << result[k];
 }

 std::cout << "\n";

  return 0;
}
